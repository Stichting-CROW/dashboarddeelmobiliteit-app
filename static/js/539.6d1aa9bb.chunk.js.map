{"version":3,"file":"static/js/539.6d1aa9bb.chunk.js","mappings":";uJASIA,EAAoB,WACtB,UAAWC,OAAW,IAAa,CACjC,GAAIA,OAAOC,iBACT,OAAOD,OAAOC,iBAMhB,IAAIC,EAASF,OAAOG,OACpB,GAAID,EACF,OAAQA,EAAOE,YAAc,IAAMF,EAAOG,aAAe,GAI7D,OAAO,CACT,CAhBwB,GAkBpBC,EAEW,SAASJ,GACpB,IACIK,EADAC,EAAQ,GAIZ,IADAN,EAAS,GAAGO,OAAOP,GACZA,EAAOQ,QAES,iBADrBH,EAAQL,EAAOS,OAEbH,EAAMI,QAAQC,MAAML,EAAOD,EAAMO,MAAA,OACxBC,MAAMC,QAAQT,GACvBL,EAAOe,KAAKJ,MAAMX,EAAQK,IAChBW,EAAAA,EAAAA,GAAchB,IACxBM,EAAMI,QAAQ,GAAKL,GAIvB,OAAOC,CACR,EAnBCF,EAuBQ,SAASJ,EAAKM,EAAOD,GAC7B,IAIIY,EAJAC,EAAQ,GAAGX,OAAOD,GAClBa,EAAOD,EAAMV,OACbY,EAAOpB,EAAIqB,KACXC,EAAQ,EAKZ,IAFAtB,EAAIqB,KAAOhB,EAAKkB,OAEXN,EAAI,EAAGA,EAAIE,IAAQF,EACtBK,EAAQE,KAAKC,IAAIzB,EAAI0B,YAAYR,EAAMD,IAAIU,MAAOL,GAGpD,OAAAtB,EAAIqB,KAAOD,EAEJ,CACLQ,OAAQT,EAAOd,EAAKwB,WACpBF,MAAOL,EAEV,EA1CClB,EAiDK,SAASJ,EAAKM,EAAOD,GAC1B,OAAOmB,KAAKC,IAAIzB,EAAKwB,KAAKM,IAAIxB,EAAOD,GACtC,EAsCH,SAAS0B,EAAO/B,EAAOM,GACrB,IAAID,EAAKC,EAAO0B,EACZd,EAAKZ,EAAO2B,EAEhB,GAAW,OAAP5B,EACF,MAAO,CAAC2B,EAAG,EAAGC,GAAI,GAEpB,GAAW,OAAPf,EACF,MAAO,CAACc,EAAG,EAAGC,EAAG,GAGnB,IAAId,EAAKnB,EAAMgC,EAAI3B,EACfe,EAAKpB,EAAMiC,EAAIf,EACfI,EAAKE,KAAKU,KAAKf,EAAKA,EAAKC,EAAKA,GAElC,MAAO,CACLY,EAAGV,EAAKH,EAAKG,EAAK,EAClBW,EAAGX,EAAKF,EAAKE,GAAM,EAEvB,CAiDA,IAAIa,EAAW,EACXC,EAAS,EACTC,EAAU,EACVC,EAAW,EACXC,EAAQ,EAEZ,SAASC,EAAOxC,EAAGM,EAAGD,GACpB,IAAIa,EAAMiB,EAEV,OAAInC,EAAIK,EAAKoC,KACXvB,GAAOkB,EACEpC,EAAIK,EAAKqC,QAClBxB,GAAOmB,GAEL/B,EAAID,EAAKsC,IACXzB,GAAOqB,EACEjC,EAAID,EAAKuC,SAClB1B,GAAOoB,GAGFpB,CACT,CAsDA,SAAS2B,EAAU7C,EAAOM,GACxB,IAEIa,EAAGC,EAFHf,EAASC,EAAOwC,OAChB5B,EAAUlB,EAGd,OAAIM,EAAOyC,QACT7B,EA1DJ,SAAiBlB,EAASM,GAUxB,QAHI0C,EAAGC,EAAGC,EANN7C,EAAKL,EAAQmD,GACbjC,EAAKlB,EAAQoD,GACbjC,EAAKnB,EAAQqD,GACbjC,EAAKpB,EAAQsD,GACbhC,EAAKkB,EAAOnC,EAAIa,EAAIZ,GACpBW,EAAKuB,EAAOrB,EAAIC,EAAId,GAKhBgB,EAAKL,KAAQK,EAAKL,KAMxB+B,EAAI1B,GAAML,GAEFsB,GACNU,EAAI5C,GAAMc,EAAKd,IAAOC,EAAKqC,IAAMzB,IAAOE,EAAKF,GAC7CgC,EAAI5C,EAAKqC,KACAK,EAAIV,GACbW,EAAI5C,GAAMc,EAAKd,IAAOC,EAAKsC,OAAS1B,IAAOE,EAAKF,GAChDgC,EAAI5C,EAAKsC,QACAI,EAAIX,GACba,EAAIhC,GAAME,EAAKF,IAAOZ,EAAKoC,MAAQrC,IAAOc,EAAKd,GAC/C4C,EAAI3C,EAAKoC,OACAM,EAAIZ,IACbc,EAAIhC,GAAME,EAAKF,IAAOZ,EAAKmC,KAAOpC,IAAOc,EAAKd,GAC9C4C,EAAI3C,EAAKmC,MAGPO,IAAM1B,EAGRA,EAAKkB,EAFLnC,EAAK4C,EACL/B,EAAKgC,EACe5C,GAIpBW,EAAKuB,EAFLrB,EAAK8B,EACL7B,EAAK8B,EACe5C,GAIxB,MAAO,CACL6C,GAAI9C,EACJgD,GAAIlC,EACJiC,GAAIlC,EACJoC,GAAIlC,EAER,CAQcmC,CAAQrC,EAASZ,EAAOkD,OAGrB,UAAXnD,GACFc,EAAID,EAAQiC,GACZ/B,EAAIF,EAAQkC,IACQ,QAAX/C,GACTc,EAAID,EAAQmC,GACZjC,EAAIF,EAAQoC,KAEZnC,GAAKD,EAAQiC,GAAKjC,EAAQmC,IAAM,EAChCjC,GAAKF,EAAQkC,GAAKlC,EAAQoC,IAAM,GA3IpC,SAAiBtD,EAAGM,EAAGD,EAAIa,EAAIC,GAC7B,OAAQA,GACR,IAAK,SACHd,EAAKa,EAAK,EACV,MACF,IAAK,SACHb,EAAK,EACLa,EAAK,EACL,MACF,IAAK,QACHb,EAAK,EACLa,EAAK,EACL,MACF,IAAK,OACHb,GAAM,EACNa,EAAK,EACL,MACF,IAAK,MACHb,EAAK,EACLa,GAAM,EACN,MACF,IAAK,QACHb,GAAMA,EACNa,GAAMA,EACN,MACF,IAAK,MAEH,MACF,QAEEC,GAAUK,KAAKiC,GAAK,IACpBpD,EAAKmB,KAAKkC,IAAIvC,GACdD,EAAKM,KAAKmC,IAAIxC,GAIhB,MAAO,CACLa,EAAGhC,EACHiC,EAAG3B,EACHsD,GAAIvD,EACJwD,GAAI3C,EAER,CAoGS4C,CAAQ3C,EAAGC,EAAGpB,EAAM4D,GAAI5D,EAAM6D,GAAIvD,EAAOyD,MAClD,CAEA,IAAIC,EAAc,CAChBC,IAAK,SAASjE,EAAIM,GAChB,IAAID,GAASL,EAAGkE,WAAalE,EAAGmE,UAAY,EACxCjD,EAAKM,KAAKkC,IAAIrD,GACdc,EAAKK,KAAKmC,IAAItD,GACde,EAAKpB,EAAGoE,YACR9C,EAAKtB,EAAGqE,YAEZ,OAAOxB,EAAU,CACfM,GAAInD,EAAGgC,EAAId,EAAKE,EAChBgC,GAAIpD,EAAGiC,EAAId,EAAKC,EAChBiC,GAAIrD,EAAGgC,EAAId,EAAKI,EAChBgC,GAAItD,EAAGiC,EAAId,EAAKG,EAChBsC,GAAI1C,EACJ2C,GAAI1C,GACHb,EACJ,EAEDgE,MAAO,SAAStE,EAAIM,GAClB,IAAID,EAAI0B,EAAO/B,EAAIM,EAAOiE,QACtBrD,EAAKb,EAAE2B,EAAIhC,EAAGwE,QAAQC,OACtBtD,EAAKd,EAAE4B,EAAIjC,EAAGwE,QAAQC,OAE1B,OAAO5B,EAAU,CACfM,GAAInD,EAAGgC,EAAId,EACXkC,GAAIpD,EAAGiC,EAAId,EACXkC,GAAIrD,EAAGgC,EAAId,EACXoC,GAAItD,EAAGiC,EAAId,EACXyC,GAAIvD,EAAE2B,EACN6B,GAAIxD,EAAE4B,GACL3B,EACJ,EAEDoE,IAAK,SAAS1E,EAAIM,GAChB,IAAID,EAAI0B,EAAO/B,EAAIM,EAAOiE,QACtBrD,EAAIlB,EAAGgC,EACPb,EAAInB,EAAGiC,EACPb,EAAK,EACLE,EAAK,EAET,OAAItB,EAAG2E,YACLzD,EAAIM,KAAKM,IAAI9B,EAAGgC,EAAGhC,EAAG4E,MACtBxD,EAAKI,KAAKqD,IAAI7E,EAAG4E,KAAO5E,EAAGgC,KAE3Bb,EAAIK,KAAKM,IAAI9B,EAAGiC,EAAGjC,EAAG4E,MACtBtD,EAAKE,KAAKqD,IAAI7E,EAAG4E,KAAO5E,EAAGiC,IAGtBY,EAAU,CACfM,GAAIjC,EACJkC,GAAIjC,EAAIG,EACR+B,GAAInC,EAAIE,EACRkC,GAAInC,EACJyC,GAAIvD,EAAE2B,EACN6B,GAAIxD,EAAE4B,GACL3B,EACJ,EAEDwE,SAAU,SAAS9E,EAAIM,GACrB,IAAID,EAAI0B,EAAO/B,EAAIM,EAAOiE,QAE1B,OAAO1B,EAAU,CACfM,GAAInD,EAAGgC,EACPoB,GAAIpD,EAAGiC,EACPoB,GAAIrD,EAAGgC,GAAKhC,EAAG2B,OAAS,GACxB2B,GAAItD,EAAGiC,GAAKjC,EAAG4B,QAAU,GACzBgC,GAAIvD,EAAE2B,EACN6B,GAAIxD,EAAE4B,GACL3B,EACJ,GAGC0B,EAnPS,SAAShC,GAClB,OAAOwB,KAAKuD,MAAM/E,EAAIH,GAAoBA,CAC3C,EA2QH,SAASmF,EAAehF,EAAIM,GAC1B,IAAID,EAAQC,EAAQ2E,MAAMC,eAAe5E,EAAQ6E,cAAcC,OAE/D,IAAK/E,EACH,OAAO,KAGT,QAAsB,IAAlBA,EAAMgF,cAA2C,IAAlBhF,EAAMiF,QACvC,MAAO,CAACtD,EAAG3B,EAAMgF,QAASpD,EAAG5B,EAAMiF,SAGrC,IAAIpE,EAAQb,EAAMkF,eAClB,OAAOvF,EAAG2E,WACR,CAAC3C,EAAGd,EAAOe,EAAG,MACd,CAACD,EAAG,KAAMC,EAAGf,EACjB,CAEA,SAASsE,EAAcxF,GACrB,OAAIA,aAAcyF,EAAAA,EACTzB,EAAYC,IAEjBjE,aAAc0F,EAAAA,EACT1B,EAAYM,MAEjBtE,aAAc2F,EAAAA,EACT3B,EAAYU,IAEdV,EAAYc,QACrB,CAmCA,SAASc,EAAU5F,EAAKM,EAAMD,GAC5B,IAAIa,EAAUb,EAAMwF,gBAChB1E,EAAcd,EAAMyF,YACpB1E,EAAcf,EAAM0F,aAEnB7E,KAAaC,IAAgBC,KAIlCpB,EAAIgG,YA1CN,SAAyBhG,EAAKM,EAAGD,EAAGa,EAAGC,EAAGC,GACxC,IAAIE,EAAUE,KAAKiC,GAAK,EAExB,GAAIrC,EAAQ,CACV,IAAIH,EAAIO,KAAKM,IAAIV,EAAQD,EAAI,EAAGD,EAAI,GAChC8B,EAAO1C,EAAIW,EACXgC,EAAM5C,EAAIY,EACViC,EAAQ5C,EAAIY,EAAID,EAChBgF,EAAS5F,EAAIc,EAAIF,EAErBjB,EAAIkG,OAAO5F,EAAG2C,GACVD,EAAOE,GAASD,EAAMgD,GACxBjG,EAAIiE,IAAIjB,EAAMC,EAAKhC,GAAIO,KAAKiC,IAAKnC,GACjCtB,EAAIiE,IAAIf,EAAOD,EAAKhC,GAAIK,EAAS,GACjCtB,EAAIiE,IAAIf,EAAO+C,EAAQhF,EAAG,EAAGK,GAC7BtB,EAAIiE,IAAIjB,EAAMiD,EAAQhF,EAAGK,EAASE,KAAKiC,KAC9BT,EAAOE,GAChBlD,EAAIkG,OAAOlD,EAAM3C,GACjBL,EAAIiE,IAAIf,EAAOD,EAAKhC,GAAIK,EAASA,GACjCtB,EAAIiE,IAAIjB,EAAMC,EAAKhC,EAAGK,EAASE,KAAKiC,GAAKnC,IAChC2B,EAAMgD,GACfjG,EAAIiE,IAAIjB,EAAMC,EAAKhC,GAAIO,KAAKiC,GAAI,GAChCzD,EAAIiE,IAAIjB,EAAMiD,EAAQhF,EAAG,EAAGO,KAAKiC,KAEjCzD,EAAIiE,IAAIjB,EAAMC,EAAKhC,GAAIO,KAAKiC,GAAIjC,KAAKiC,IAEvCzD,EAAImG,YACJnG,EAAIkG,OAAO5F,EAAGD,EAAC,MAEfL,EAAIoG,KAAK9F,EAAGD,EAAGa,EAAGC,EAEtB,CAaEkF,CACErG,EACAgC,EAAU1B,EAAK0B,GAAKZ,EAAc,EAClCY,EAAU1B,EAAK2B,GAAKb,EAAc,EAClCY,EAAU1B,EAAKgG,GAAKlF,EACpBY,EAAU1B,EAAKiG,GAAKnF,EACpBf,EAAMmG,cAERxG,EAAImG,YAEAjF,IACFlB,EAAIyG,UAAYvF,EAChBlB,EAAI0G,QAGFvF,GAAeC,IACjBpB,EAAI2G,YAAcxF,EAClBnB,EAAI4G,UAAYxF,EAChBpB,EAAI6G,SAAW,QACf7G,EAAI8G,UAER,CAsBA,SAASC,EAAa/G,EAAKM,EAAMD,GAC/B,IAAIa,EAASlB,EAAIgH,WACb7F,EAAUd,EAAI4G,QACd7F,EAAIY,EAAU3B,EAAI2B,GAClBV,EAAIU,EAAU3B,EAAI4B,GAClBhB,EAAIe,EAAU3B,EAAIiG,GAElBnF,GACFnB,EAAIkH,WAAW5G,EAAMc,EAAGE,EAAGL,GAGzBZ,EAAI8G,SACFjG,GAAUC,IAGZnB,EAAIgH,WAAa,GAGnBhH,EAAIoH,SAAS9G,EAAMc,EAAGE,EAAGL,GAErBC,GAAUC,IACZnB,EAAIgH,WAAa9F,GAGvB,CA8CA,IAAImG,EAAQ,SAASrH,EAAQM,EAAKD,EAAIa,GACpC,IAAIC,EAAKmG,KAETnG,EAAGoG,QAAUvH,EACbmB,EAAGqG,OAAStG,EACZC,EAAGsG,OAAS,KACZtG,EAAGuG,OAAS,KACZvG,EAAGwG,KAAOrH,EACVa,EAAGyG,IAAMvH,CACX,GAEAwH,EAAAA,EAAAA,GAAMR,EAAMS,UAAW,CAIrBC,UAAW,SAAS/H,EAASM,EAAOD,EAAQa,GAC1C,IAAIC,EAAKmG,KACLlG,EAAQD,EAAGqG,OACXlG,GAAO0G,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOgB,KAAM,CAAC,GAAIH,EAASE,IAClDH,GAAQgH,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO6H,MAAOC,EAAAA,EAAAA,OAAmBjH,EAASE,GAE/D,MAAO,CACL2C,OAAOkE,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO0D,MAAO,UAAW7C,EAASE,GAClD0B,QAAQmF,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOyC,OAAQ,UAAW5B,EAASE,GACpDoC,KAAMtC,EAAQ+D,MAAMmD,UACpBvC,iBAAiBoC,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOwF,gBAAiB,MAAO3E,EAASE,GAClE0E,aAAamC,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOyF,YAAa,MAAO5E,EAASE,GAC1DoF,cAAcyB,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOmG,aAAc,GAAItF,EAASE,GACzD2E,aAAakC,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO0F,YAAa,GAAI7E,EAASE,GACvD2B,OAAOkF,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO0C,OAAO,GAAQ7B,EAASE,GAC/CiH,MAAMJ,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOgI,MAAM,GAAQnH,EAASE,GAC7C8G,MAAOjH,EACPqH,QAAStI,EACTqB,KAAMC,EACNiH,MAAOjI,EACPkI,QAAQP,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOmI,OAAQ,GAAItH,EAASE,GAC7CqH,SAASR,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOoI,QAAS,GAAIvH,EAASE,GAC/CmD,OAAQS,EAAe7D,EAAGyG,IAAK1G,GAC/BwH,SAASC,EAAAA,EAAAA,IAAUV,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOqI,QAAS,GAAIxH,EAASE,IACzDwH,WAAYpD,EAAcrE,EAAGyG,KAC7BiB,UAAUZ,EAAAA,EAAAA,GAAQ,CAAC5H,EAAOwI,SAAU,GAAI3H,EAASE,IAAUI,KAAKiC,GAAK,KACrEqF,KAAM1I,EAAee,EAAGwG,KAAMrH,EAAOgB,GACrCyH,WAAWd,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO0I,UAAW,SAAU7H,EAASE,GACzD4H,gBAAgBf,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO2I,eAAgB,GAAI9H,EAASE,GAC7D6H,iBAAiBhB,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO4I,gBAAiBhI,GAAQC,EAASE,GACnE8H,iBAAiBjB,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO6I,gBAAiBjI,GAAQC,EAASE,GACnE+H,iBAAiBlB,EAAAA,EAAAA,GAAQ,CAAC5H,EAAO8I,gBAAiB,GAAIjI,EAASE,GAElE,EAEDgI,OAAQ,SAASpJ,GACf,IAKIsB,EAAOL,EAAO+B,EALd1C,EAAKgH,KACLjH,EAAQ,KACRa,EAAQ,KACRC,EAAQb,EAAGkH,OACXpG,EAASd,EAAGiH,QAKZtE,GAAUgF,EAAAA,EAAAA,GAAQ,CAAC7G,EAAOkH,SAAS,GAAOtI,EAASmB,GAEnD8B,IACF3B,EAAQtB,EAAQqJ,QAAQC,KAAKnI,GAC7BF,GAAQsI,EAAAA,EAAAA,IAAeC,EAAAA,EAAAA,GAASpI,EAAOqI,UAAW,CAACnI,EAAOtB,IAAWsB,IACrE0B,GAAQhC,EAAAA,EAAAA,GAAcC,GAAS,GAAKb,EAAkBa,IAE5CT,SAERU,EAxRR,SAAuBlB,GACrB,IAAIM,EAAcN,EAAM+F,aAAe,EACnC1F,EAAUL,EAAM0I,QAChBxH,EAAKlB,EAAM8I,KAAKlH,OAChBT,EAAKnB,EAAM8I,KAAKnH,MAChBP,GAAMD,EAAK,EACXG,GAAMJ,EAAK,EAEf,MAAO,CACLwI,MAAO,CACL1H,EAAGZ,EAAKf,EAAQoC,KAAOnC,EACvB2B,EAAGX,EAAKjB,EAAQsC,IAAMrC,EACtBgG,EAAGnF,EAAKd,EAAQsB,MAAsB,EAAdrB,EACxBiG,EAAGrF,EAAKb,EAAQuB,OAAuB,EAAdtB,GAE3BqJ,KAAM,CACJ3H,EAAGZ,EACHa,EAAGX,EACHgF,EAAGnF,EACHoF,EAAGrF,GAGT,CAkQgB0I,CADRvJ,EAAQC,EAAGyH,UAAU9E,EAASD,EAAO5B,EAAQpB,MAKjDM,EAAGmH,OAASpH,EACZC,EAAGoH,OAASxG,CACb,EAED2I,SAAU,WACR,OAAOvC,KAAKI,OAASJ,KAAKI,OAAOgC,MAAQ,CAAC,CAC3C,EAEDb,SAAU,WACR,OAAOvB,KAAKG,OAASH,KAAKG,OAAOoB,SAAW,CAC7C,EAEDiB,QAAS,WACP,OAAOxC,KAAKG,QAAUH,KAAKG,OAAOgB,OACnC,EAEDsB,MAAO,WACL,OAAOzC,KAAKG,MACb,EAEDuC,KAAM,SAAShK,EAAOM,GACpB,IAIIgB,EAHAJ,EAAMlB,EAAMiK,IACZ9I,EAFKmG,KAEMG,OACXrG,EAHKkG,KAGMI,OAGVJ,KAAKwC,YAIV5I,EAAIgJ,OAEA/I,EAAMkH,OACR/G,EAAOH,EAAMqC,KACbtC,EAAI8E,YACJ9E,EAAIkF,KACF9E,EAAKmB,KACLnB,EAAKqB,IACLrB,EAAKoB,MAAQpB,EAAKmB,KAClBnB,EAAKsB,OAAStB,EAAKqB,KACrBzB,EAAImH,QAGNnH,EAAIiJ,YAAc/J,EAAY,EAAGe,EAAMsH,QAAS,GAChDvH,EAAIkJ,UAAUpI,EAAU1B,EAAO0B,GAAIA,EAAU1B,EAAO2B,IACpDf,EAAImJ,OAAOlJ,EAAM0H,UAEjBjD,EAAU1E,EAAKE,EAAMsI,MAAOvI,GArKhC,SAAkBnB,EAAKM,EAAOD,EAAMa,GAClC,IAQIe,EARAd,EAAQD,EAAM6H,UACd3H,EAAQF,EAAMgH,MACd5G,IAAWF,EACXH,EAAOC,EAAMG,KACb2B,EAAO1C,EAAME,OACbyC,EAAc/B,EAAMgI,gBACpBhG,EAAchC,EAAMiI,gBACpBlD,EAAUhD,GAAeC,EAG7B,GAAKF,IAAU1B,GAAW2E,GAsB1B,IAjBA5F,EA9DF,SAAsBL,EAAMM,EAAOD,GACjC,IAAIa,EAAIb,EAAKwB,WACTV,EAAInB,EAAKsG,EACTlF,EAAIpB,EAAKgC,EAGb,MAAc,WAAV1B,EACFc,GAAKD,EAAI,GACU,QAAVb,GAA6B,UAAVA,KAC5Bc,GAAKD,GAGA,CACLoF,EAAGrF,EACHoF,EAAGnF,EACHa,EAAGZ,EACHa,EAZMjC,EAAKiC,EAAIf,EAAI,EAcvB,CA4CSoJ,CAAajK,EAAMc,EAAOF,GAEjCjB,EAAIqB,KAAOJ,EAAKM,OAChBvB,EAAI+I,UAAY5H,EAChBnB,EAAIuK,aAAe,SACnBvK,EAAIgH,WAAa9F,EAAM8H,eACvBhJ,EAAIwK,YAActJ,EAAM+H,gBAEpB3H,IACFtB,EAAIyG,UAAYrF,GAEd6E,IACFjG,EAAI6G,SAAW,QACf7G,EAAI4G,UAAY1D,EAChBlD,EAAI2G,YAAc1D,GAGfhB,EAAI,EAAGe,EAAO1C,EAAME,OAAQyB,EAAIe,IAAQf,EAC3C8E,EAAa/G,EAAKM,EAAM2B,GAAI,CAC1BgF,QAAShB,EACTkB,OAAQ7F,EACRgF,EAAGjG,EAAKiG,EACRtE,EAAG3B,EAAK2B,EACRC,EAAG5B,EAAK4B,EAAI5B,EAAKkG,EAAItE,GAG3B,CA4HIwI,CAASvJ,EAAKC,EAAMoH,MAAOnH,EAAMuI,KAAMxI,GAEvCD,EAAIwJ,UACL,IAGH,IAAIC,EAAcC,OAAOC,mBAAqB,iBAC1CC,EAAcF,OAAOG,kBAAoB,iBAE7C,SAASC,EAAQhL,EAAOM,EAAQD,GAC9B,IAAIa,EAAMM,KAAKkC,IAAIrD,GACfc,EAAMK,KAAKmC,IAAItD,GACfe,EAAKd,EAAO0B,EACZV,EAAKhB,EAAO2B,EAEhB,MAAO,CACLD,EAAGZ,EAAKF,GAAOlB,EAAMgC,EAAIZ,GAAMD,GAAOnB,EAAMiC,EAAIX,GAChDW,EAAGX,EAAKH,GAAOnB,EAAMgC,EAAIZ,GAAMF,GAAOlB,EAAMiC,EAAIX,GAEpD,CAEA,SAAS2J,EAAUjL,EAAQM,GACzB,IAGIc,EAAGE,EAAIL,EAAI+B,EAAIC,EAHf5C,EAAMyK,EACN5J,EAAMyJ,EACNxJ,EAASb,EAAKiE,OAGlB,IAAKnD,EAAI,EAAGA,EAAIpB,EAAOQ,SAAUY,EAE/BH,GADAK,EAAKtB,EAAOoB,IACJY,EAAIb,EAAOa,EACnBgB,EAAK1B,EAAGW,EAAId,EAAOc,EACnBgB,EAAK3C,EAAKsD,GAAK3C,EAAKX,EAAKuD,GAAKb,EAC9B3C,EAAMmB,KAAKM,IAAIzB,EAAK4C,GACpB/B,EAAMM,KAAKC,IAAIP,EAAK+B,GAGtB,MAAO,CACLnB,IAAKzB,EACLoB,IAAKP,EAET,CAEA,SAASgK,EAAOlL,EAAIM,GAClB,IAAID,EAAKC,EAAG0B,EAAIhC,EAAGgC,EACfd,EAAKZ,EAAG2B,EAAIjC,EAAGiC,EACfd,EAAKK,KAAKU,KAAK7B,EAAKA,EAAKa,EAAKA,GAElC,MAAO,CACL0C,IAAKtD,EAAG0B,EAAIhC,EAAGgC,GAAKb,EACpB0C,IAAKvD,EAAG2B,EAAIjC,EAAGiC,GAAKd,EACpBoD,OAAQvE,EACRmL,GAAIhK,EAER,CAEA,IAAIiK,EAAS,WACX9D,KAAK+D,UAAY,EACjB/D,KAAKgE,MAAQ,CACXtJ,EAAG,EACHC,EAAG,EACHqE,EAAG,EACHC,EAAG,EAEP,GAEAsB,EAAAA,EAAAA,GAAMuD,EAAOtD,UAAW,CACtByD,OAAQ,WACN,IAAIvL,EAAIsH,KAAKgE,MACb,MAAO,CACLtJ,EAAGhC,EAAEgC,EAAIhC,EAAEsG,EAAI,EACfrE,EAAGjC,EAAEiC,EAAIjC,EAAEuG,EAAI,EAElB,EAED6C,OAAQ,SAASpJ,EAAQM,EAAMD,GAC7BiH,KAAK+D,UAAYhL,EACjBiH,KAAKgE,MAAQ,CACXtJ,EAAG1B,EAAK0B,EAAIhC,EAAOgC,EACnBC,EAAG3B,EAAK2B,EAAIjC,EAAOiC,EACnBqE,EAAGhG,EAAKgG,EACRC,EAAGjG,EAAKiG,EAEX,EAEDiF,SAAU,SAASxL,GACjB,IAAIM,EAAKgH,KAELpG,EAAOZ,EAAGgL,MAEd,SAAAtL,EAAQgL,EAAQhL,EAAOM,EAAGiL,UAAWjL,EAAG+K,YAEzBrJ,EAAId,EAAKc,EALX,GAMRhC,EAAMiC,EAAIf,EAAKe,EANP,GAORjC,EAAMgC,EAAId,EAAKc,EAAId,EAAKoF,EAAIjG,GAC5BL,EAAMiC,EAAIf,EAAKe,EAAIf,EAAKqF,EAAIlG,EAClC,EAIDoL,WAAY,SAASzL,GACnB,IAMImB,EAAGC,EAAKE,EANRhB,EAAKgH,KAAKoE,UACVrL,EAAKL,EAAM0L,UACXxK,EAAO,CACTgK,EAAO5K,EAAG,GAAIA,EAAG,IACjB4K,EAAO5K,EAAG,GAAIA,EAAG,KAanB,IATIgH,KAAK+D,YAAcrL,EAAMqL,WAG3BnK,EAAKH,KACHmK,EAAO7K,EAAG,GAAIA,EAAG,IACjB6K,EAAO7K,EAAG,GAAIA,EAAG,KAIhBc,EAAI,EAAGA,EAAID,EAAKV,SAAUW,EAI7B,GAHAC,EAAM6J,EAAU3K,EAAIY,EAAKC,IACzBG,EAAM2J,EAAU5K,EAAIa,EAAKC,IAErBC,EAAIK,IAAMH,EAAIQ,KAAOR,EAAIG,IAAML,EAAIU,IACrC,OAAO,EAIX,OAAO,CACR,EAKD4J,QAAS,WACP,IAAI1L,EAAKsH,KACLhH,EAAON,EAAGsL,MACVjL,EAAQL,EAAGqL,UACXnK,EAASlB,EAAGuL,SAEhB,MAAO,CACLP,EAAQ,CAAChJ,EAAG1B,EAAK0B,EAAGC,EAAG3B,EAAK2B,GAAIf,EAAQb,GACxC2K,EAAQ,CAAChJ,EAAG1B,EAAK0B,EAAI1B,EAAKgG,EAAGrE,EAAG3B,EAAK2B,GAAIf,EAAQb,GACjD2K,EAAQ,CAAChJ,EAAG1B,EAAK0B,EAAI1B,EAAKgG,EAAGrE,EAAG3B,EAAK2B,EAAI3B,EAAKiG,GAAIrF,EAAQb,GAC1D2K,EAAQ,CAAChJ,EAAG1B,EAAK0B,EAAGC,EAAG3B,EAAK2B,EAAI3B,EAAKiG,GAAIrF,EAAQb,GAEpD","sources":["../node_modules/tw-elements/node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js"],"sourcesContent":["/*!\n * chartjs-plugin-datalabels v2.2.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport { plugin as default };\n"],"names":["D","window","devicePixelRatio","e","screen","deviceXDPI","logicalXDPI","m","r","t","concat","length","pop","unshift","apply","split","Array","isArray","push","p","s","a","i","n","font","o","string","Math","max","measureText","width","height","lineHeight","min","A","x","y","sqrt","te","j","N","O","F","M","left","right","top","bottom","P","anchor","clamp","l","u","v","x0","y0","x1","y1","ie","area","PI","cos","sin","vx","vy","ae","align","E","arc","startAngle","endAngle","innerRadius","outerRadius","point","origin","options","radius","bar","horizontal","base","abs","fallback","round","oe","chart","getDatasetMeta","datasetIndex","vScale","xCenter","yCenter","getBasePixel","se","Q","Z","ee","ue","backgroundColor","borderColor","borderWidth","beginPath","d","moveTo","closePath","rect","le","w","h","borderRadius","fillStyle","fill","strokeStyle","lineWidth","lineJoin","stroke","de","shadowBlur","stroked","strokeText","filled","fillText","L","this","_config","_index","_model","_rects","_ctx","_el","g","prototype","_modelize","q","f","color","J","chartArea","clip","display","lines","offset","opacity","padding","K","positioner","rotation","size","textAlign","textShadowBlur","textShadowColor","textStrokeColor","textStrokeWidth","update","dataset","data","V","z","formatter","frame","text","ne","geometry","visible","model","draw","ctx","save","globalAlpha","translate","rotate","ve","textBaseline","shadowColor","fe","restore","he","Number","MIN_SAFE_INTEGER","ye","MAX_SAFE_INTEGER","b","W","I","ln","G","_rotation","_rect","center","contains","intersects","_points"],"sourceRoot":""}